# –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–∫—Å–µ–ª—å —Ñ–∞–π–ª–∞–º–∏ —Ç–∞–∫–∂–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∞
# pip install openpyxl

# –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –∏ –≤—ã–≤–æ–¥–∞ –≤ –º–∞—Ä–∫–¥–∞—É–Ω —Ñ–æ—Ä–º–∞—Ç
# pip install tabulate 

import telebot
from telebot import types
import config
import numpy as np
import pandas as pd
import datetime

API_TOKEN = config.Token
bot = telebot.TeleBot(API_TOKEN)
flight = []
flight_read = None
head_flight = ['date', 'type_flight', 'n_exe', 't_of_d', 'fl_hours', 'count_fl', 'score', 'num_rec']
command = '''
    /add - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–µ—Ç–µ
    /for_day - –æ—Ç–æ–±—Ä–∞—Ç—å –∑–∞–ø–∏—Å–∏ –ø–æ –¥–∞—Ç–µ
    /data - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    /select - –ø–æ–ª—É—á–∏—Ç—å –∏—Ç–æ–≥–∏ –≤—ã–±–æ—Ä–∫–∏ –∏ Excel-—Ñ–∞–π–ª—ã
    /del - —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ –ø–æ–ª–µ—Ç—É
'''


def flight_load():
    global flight_read
    flight_read = pd.read_csv(
    'flight.csv', 
    delimiter=',', 
    # –ø–µ—Ä–µ–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ dataframe
    names = head_flight)
    print(flight_read)

    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö - —É–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã, –∏–Ω–∞—á–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç
    flight_read['date'] = flight_read['date'].astype("datetime64[ns]") 
    # - —ç—Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –¥–∞—Ç - —á—Ç–æ–± —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –ø–µ—Ä–∏–æ–¥–µ

    # –º–µ–Ω—è–µ–º —Ç–∏–ø –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ª—å—Ç—ã
    # –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è - –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –≤ —Å—Ç—Ä–æ–∫–µ —Ñ–æ—Ä–º–∞—Ç hh:mm:ss format
    flight_read['fl_hours'] = flight_read['fl_hours'].astype("timedelta64[ns]") 
    print('—Å–º–µ–Ω–∞ —Ç–∏–ø–∞\n',flight_read.info())

@bot.message_handler(commands=['start'])
def start_message(message):
    try:
        flight_load()
        bot.send_message(message.chat.id, text=f'''–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.
        –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:{command}''')
    except:
        bot.send_message(message.chat.id, text='''–î–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.
        –ñ–º–∏, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å:
        /add - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–µ—Ç–µ''')
# –¥–æ–±–∞–≤–∏—Ç—å –ø–æ—Ç–æ–º –∫–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é
# –ø—Ä–∏ –≤–≤–æ–¥–µ –∑–Ω–∞—á–µ–Ω–∏–π –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–∫—É
     

@bot.message_handler(commands=['add'])
def add_message(message):
    flight.clear()
    msg = bot.reply_to(
        message, '–í–≤–µ–¥–∏ –¥–∞—Ç—É –ø–æ–ª–µ—Ç–∞ –≤ –ø–æ–ª–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π üëá –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx.xx.xxxx')
    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥.—Å–æ–±—ã—Ç–∏–µ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
    bot.register_next_step_handler(msg, date_input)

# –∑–¥–µ—Å—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–æ–ª—è –∏ –ø–æ–∫–∞ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ - –≤ –∏—Ç–æ–≥–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ csv


def date_input(message):
    global flight
    try:
        # 2022-12-11 –Ω—É–∂–µ–Ω —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –≤ csv –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Ç–±–æ—Ä–∞
        flight_date = '-'.join(reversed(message.text.split('.')))
        print(flight_date)
        flight.append(flight_date)
        print(flight)
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        b1 = types.InlineKeyboardButton(
            text='–î–µ—Å–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–π—Å–∫ –±–æ–µ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏', callback_data='–î–µ—Å–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ')
        b2 = types.InlineKeyboardButton(
            text='–ü–µ—Ä–µ–≤–æ–∑–∫–∞ –±–æ–µ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –≥—Ä—É–∑–æ–≤', callback_data='–ü–µ—Ä–µ–≤–æ–∑–∫–∞')
        b3 = types.InlineKeyboardButton(
            text='–ü–æ–ª–µ—Ç—ã –Ω–∞ –°–û–ñ', callback_data='–°–û–ñ')
        keyboard.add(b1, b2, b3)
        bot.reply_to(message, '–í—ã–±–µ—Ä–∏—Ç–µ –í–∏–¥ –±–æ–µ–≤–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è üëá',
                     reply_markup=keyboard)

    except Exception as e:
        bot.reply_to(message, 'oooops')


@bot.callback_query_handler(func=lambda call: True)
def user_choice(call):
    global flight
    text = call.data
    bot.answer_callback_query(call.id, "–ü—Ä–∏–Ω—è—Ç–æ")
    flight.append(text)
    print(flight)
    msg = bot.edit_message_text(chat_id=call.message.chat.id,
                                message_id=call.message.message_id, text='–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è')
    bot.register_next_step_handler(msg, exe_input)


def exe_input(message):
    global flight
    try:
        num_exe = message.text
        flight.append(num_exe)
        print(flight)
        # –≤—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è –Ω–∞ 2 –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –Ω–æ—á–Ω—ã–º, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫ –¥–Ω–µ–≤–Ω—ã–º
        if num_exe[0] == '2':
            flight.append('–ù')
        else:
            flight.append('–î')
        msg = bot.reply_to(
            message, '–û—Ç–ª–∏—á–Ω–æ! –ñ–¥—É –≤—Ä–µ–º—è –ø–æ–ª–µ—Ç–∞ üëá –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á—á:–º–º\n–ù–∞–ø—Ä–∏–º–µ—Ä, 2:45; 3:00; 0:20 –∏ —Ç.–¥.')
        bot.register_next_step_handler(msg, time_input)
    except Exception as e:
        bot.reply_to(message, 'oooops')


def time_input(message):
    global flight
    try:
        # –¥–æ–±–∞–≤–ª—è—é –∫ –∑–Ω–∞—á–µ–Ω–∏—é —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Ç–∏–ø–∞ timedelta64[ns] -  hh:mm:ss format
        flight_time = f'{message.text}:00'
        flight.append(flight_time)
        print(flight)
        msg = bot.reply_to(
            message, '–û–∫! –°–∫–æ–ª—å–∫–æ –±—ã–ª–æ –ø–æ–ª–µ—Ç–æ–≤?')
        bot.register_next_step_handler(msg, count_input)
    except Exception as e:
        bot.reply_to(message, 'oooops')


def count_input(message):
    global flight
    try:
        flight_count = message.text
        if not flight_count.isdigit():
            msg = bot.reply_to(
                message, '–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ü–∏—Ñ—Ä—É. –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –ø–æ–ª–µ—Ç–æ–≤:')
            bot.register_next_step_handler(msg, count_input)
            return
        flight.append(flight_count)
        print(flight)
        msg = bot.reply_to(
            message, '–ü—Ä–∏–Ω—è–ª! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –æ—Ü–µ–Ω–∫—É –∑–∞ –±–æ–µ–≤–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:')
        bot.register_next_step_handler(msg, eval_input)
    except Exception as e:
        bot.reply_to(message, 'oooops')


def eval_input(message):
    global flight
    try:
        flight_eval = message.text
        if not flight_eval.isdigit():
            msg = bot.reply_to(message, '–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ü–∏—Ñ—Ä—É. –í–≤–µ–¥–∏ –æ—Ü–µ–Ω–∫—É:')
            bot.register_next_step_handler(msg, eval_input)
            return
        flight.append(flight_eval)
        print(flight)
        msg = bot.reply_to(
            message, '–°—É–ø–µ—Ä! –£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä –∫–Ω–∏–∂–∫–∏/–Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã\n–Ω–∞–ø—Ä–∏–º–µ—Ä, 2/56')
        bot.register_next_step_handler(msg, num_str)
    except Exception as e:
        bot.reply_to(message, 'oooops')

# —Å–æ–±–∏—Ä–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
def str_list(li):
    str_li = ''
    str_li += f'''\n–î–∞—Ç–∞: {li[0]}
    –í–∏–¥ –±–æ–µ–≤–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è: {li[1]}
    ‚Ññ —É–ø—Ä: {li[2]}
    –í—Ä–µ–º—è —Å—É—Ç–æ–∫: {li[3]}
    –ù–∞–ª—ë—Ç: {li[4]}
    –ö–æ–ª-–≤–æ –ø–æ–ª—ë—Ç–æ–≤: {li[5]}
    –û—Ü–µ–Ω–∫–∞: {li[6]}
    ‚Ññ –ª–µ—Ç–Ω–æ–π –∫–Ω–∏–∂–∫–∏: {li[7]}'''
    return str_li

def num_str(message):
    global flight
    try:
        flight_num = message.text
        flight.append(flight_num)
        print(flight)
        markup = types.ReplyKeyboardMarkup(
            one_time_keyboard=True, resize_keyboard=True)
        markup.add('–û–∫', '–ù–µ—Ç')
        msg = bot.reply_to(
            message, f'–ü—Ä–æ–≤–µ—Ä—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ª–µ—Ç—É{str_list(flight)}', reply_markup=markup)
        bot.register_next_step_handler(msg, process_confirm)
    except Exception as e:
        bot.reply_to(message, 'oooops')


def process_confirm(message):
    global flight
    try:
        confirm = message.text
        if confirm == '–û–∫':
            bot.reply_to(message, f'''–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.
            –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:{command}''')
            # –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â–∏–π –∏–ª–∏ –≤–Ω–æ–≤—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–æ –∫–æ–º–∞–Ω–¥–µ /add - –∑–∞–≤–µ—Ä—à–∞—é—â–∏–π —à–∞–≥
            with open('flight.csv', 'a', encoding="utf8") as file:
                file.write(f"{','.join(flight)}\n")

        elif confirm == '–ù–µ—Ç':
            bot.reply_to(message, f'''–î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã.
            –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:{command}''')
            flight.clear()
            print(f'–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω {flight}')
        else:
            raise Exception()
    except Exception as e:
        bot.reply_to(message, 'oooops')

@bot.message_handler(commands=['for_day'])
def date_message(message):
    msg = bot.reply_to(
        message, '–£–∫–∞–∂–∏ –¥–∞—Ç—É - –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –¥–¥.–º–º.–≥–≥–≥–≥\n–ù–∞–ø—Ä–∏–º–µ—Ä: 24.10.2018 –∏–ª–∏ 25.02.2022')
    bot.register_next_step_handler(msg, for_day)

def for_day(message):
    # –æ–±–Ω–æ–≤–ª—è–µ–º DataFrame
    try:
        flight_load()    
        try:
            dt_day = tuple(map(int, message.text.split('.')))
            print('dt_day', dt_day)
                # –ø—Ä–æ–±—É—é –ø–æ –¥–∞—Ç–µ date -? np.datetime64("2018-01-01") - –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, datetime —Å—Ä–∞–±–æ—Ç–∞–ª–æ
            fn = flight_read["date"].map(lambda x: x == datetime.datetime(dt_day[2],dt_day[1],dt_day[0]))
            bot.send_message(message.chat.id, text=f'–ü–æ –¥–∞—Ç–µ\n\n{flight_read[fn].to_markdown(tablefmt="grid")}')
            try:
                    # —Å–ø–∏—Å–æ–∫ –ø–æ –¥–∞—Ç–µ –≤—ã–≥—Ä—É–∂–∞–µ–º –≤ —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
                fl_day = flight_read[fn]
                new_df = fl_day.apply(lambda x: round(x / np.timedelta64(1,  "h"),2) if x.name == 'fl_hours' else x)       

                new_df.to_excel('data_flights.xlsx')  
                doc = open('data_flights.xlsx', 'rb')
                bot.send_message(message.chat.id, text=f'–ó–∞–ø–∏—Å–∏ –∑–∞ {dt_day} –≤ —Ñ–∞–π–ª–µ üëá')
                bot.send_document(message.chat.id, doc,caption='–ü–æ–ª–µ—Ç—ã –∑–∞ –¥–µ–Ω—å')
                doc.close()

                tdi = fl_day.fl_hours.sum() #—Å—É–º–º–∞ –Ω–∞–ª–µ—Ç–∞ —á–∞—Å–æ–≤ - —Å—á–∏—Ç–∞–µ—Ç –¥–µ–ª—å—Ç—ã –ø–æ —Å—Ç—Ä–æ–∫–∞–º –∑–∞ –¥–µ–Ω—å
                print(tdi) 
                tdi = tdi /  np.timedelta64(1,  "h") #–ø—ã—Ç–∞—é—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —á–∞—Å—ã, –ø–æ–ª—É—á–∞—é –≤–µ—Ä–Ω–æ - —Ç–∏–ø –§–ª–æ–∞—Ç
                # —Å–æ–±–∏—Ä–∞—é —Å—Ç—Ä–æ–∫—É —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∏—Ç–æ–≥–∞–º–∏ –≤ –Ω—É–∂–Ω–æ–º –º–Ω–µ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤
                count_day = fl_day.count_fl.sum()
                new_row = pd.Series(data={'fl_hours': tdi, 'count_fl':count_day}, name='–ò—Ç–æ–≥')
                #append row to the dataframe 
                fl_day = fl_day.append(new_row, ignore_index=False)

                # –ø—Ä–æ—Å—Ç–æ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                with open('day.txt', 'w', encoding="utf8") as file:
                    file.write(f'–ó–∞–ø–∏—Å–∏ –∑–∞ {dt_day}:\n{fl_day.to_markdown(tablefmt="grid")}')
                doc = open('day.txt', 'rb')
                bot.send_document(message.chat.id, doc, caption='–ü–æ–ª–µ—Ç—ã –∑–∞ –¥–µ–Ω—å')
                doc.close()
                # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤ –¥–Ω—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                bot.send_message(message.chat.id, text=f'''–ò—Ç–æ–≥ –∑–∞ {dt_day[2]}-{dt_day[1]}-{dt_day[0]}:
                –ù–∞–ª—ë—Ç —á–∞—Å–æ–≤ = {tdi}
                –ß–∏—Å–ª–æ –≤—ã–ª–µ—Ç–æ–≤ = {count_day} ''')

            except:         
                bot.send_message(message.chat.id, text='–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ .xlsx')

        except Exception as e:
            bot.reply_to(message, 'oooops')
    except:
        bot.send_message(message.chat.id, text='''–î–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.
        –ñ–º–∏, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å:
        /add - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–µ—Ç–µ''')


@bot.message_handler(commands=['data'])
def data_message(message):
    # –æ–±–Ω–æ–≤–ª—è–µ–º DataFrame
    try:
        flight_load()    
        # –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–∏—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º —Ç–∞–±–ª–∏—Ü–µ–π, –Ω–æ —ç—Ç–æ –Ω–µ –æ—Å–æ–±–æ –∫—Ä–∞—Å–∏–≤–æ
        # bot.send_message(message.chat.id, text=flight_read.to_markdown(tablefmt="grid"))
        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∞–π–ª —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º –¥–∞–Ω–Ω—ã—Ö - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        try:
            new_df = flight_read.apply(lambda x: round(x / np.timedelta64(1,  "h"),2) if x.name == 'fl_hours' else x)       
            new_df.to_excel('data_flights.xlsx')  
            doc = open('data_flights.xlsx', 'rb')
            bot.send_message(message.chat.id, text='–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å–º–æ—Ç—Ä–∏ –≤ —Ñ–∞–π–ª–µ üëá')
            bot.send_document(message.chat.id, doc,caption='–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö')
            doc.close()
        except:         
            bot.send_message(message.chat.id, text='–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ .xlsx')

        # —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∑–¥–µ—Å—å —Å–≤–æ–¥ –≤ —Ä–∞–∑—Ä–µ–∑–µ –Ω—É–∂–Ω—ã—Ö –≥—Ä—É–ø–ø–∏—Ä–æ–≤–æ–∫ - —Ç–æ–ª—å–∫–æ –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        tdi = flight_read.fl_hours.sum() #—Å—É–º–º–∞ –Ω–∞–ª–µ—Ç–∞ —á–∞—Å–æ–≤ - —Å—á–∏—Ç–∞–µ—Ç –¥–µ–ª—å—Ç—ã –ø–æ —Å—Ç—Ä–æ–∫–∞–º
        print(tdi) #0 days 07:15:00
        # –ø—Ä–æ–±—É—é –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ —á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã –±–µ–∑ –¥–Ω–µ–π 
        minutes = tdi.total_seconds()/60
        hours = minutes/60
        print(tdi.total_seconds(),minutes, hours) #26100.0 435.0 7.25

        # —Ñ–æ—Ä–º–∏—Ä—É—é —Å–≤–æ–¥: –í—Ä–µ–º—è —Å—É—Ç–æ–∫ - –ù–∞–ª–µ—Ç - –∫–æ–ª.–ø–æ–ª–µ—Ç–æ–≤
        print('–¥–ª—è —Å–≤–æ–¥–∞\n',flight_read.info())
        svod_data = flight_read.groupby(['t_of_d','type_flight']).sum(numeric_only=False)[['fl_hours','count_fl']]
        # —Å–æ–±–∏—Ä–∞—é —Å—Ç—Ä–æ–∫—É —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∏—Ç–æ–≥–∞–º–∏ –≤ –Ω—É–∂–Ω–æ–º –º–Ω–µ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤
        new_row = pd.Series(data={'fl_hours': hours, 'count_fl':flight_read.count_fl.sum()}, name='–ò—Ç–æ–≥')
         #append row to the dataframe 
        svod_data = svod_data.append(new_row, ignore_index=False)

        print(svod_data.to_markdown())
        bot.send_message(message.chat.id, text=f'–°–≤–æ–¥ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫:\n {svod_data.to_markdown(tablefmt="grid")}')
        # –ø—Ä–æ—Å—Ç–æ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        with open('svod.txt', 'w', encoding="utf8") as file:
            file.write(f"–°–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–∏–¥–∞–º –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫:\n{svod_data.to_markdown()}")
        doc = open('svod.txt', 'rb')
        bot.send_document(message.chat.id, doc, caption='–°–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–∏–¥–∞–º –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫')
        doc.close()

    except:
        bot.send_message(message.chat.id, text='''–î–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.
        –ñ–º–∏, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å:
        /add - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–µ—Ç–µ''')



@bot.message_handler(commands=['del'])
def delete_message(message):
        # –æ–±–Ω–æ–≤–ª—è–µ–º DataFrame
    try:
        flight_load() 
        print('–∑–∞–≥—Ä—É–∑–∏–ª–∏ —Ñ—Ä–µ–π–º –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —Å—Ç—Ä–æ–∫–∏')
        try:
            new_df = flight_read.apply(lambda x: round(x / np.timedelta64(1,  "h"),2) if x.name == 'fl_hours' else x)       
            new_df.to_excel('data_flights.xlsx')  
            # –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω —á–µ—Ä–µ–∑ - –∏–ª–∏ –∑–∞–ø—è—Ç—É—é
            bot.send_message(message.chat.id, '‚úçÔ∏è –£–∫–∞–∂–∏ –∏–Ω–¥–µ–∫—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏\n–°–º–æ—Ç—Ä–∏ –ª–µ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –≤ —Ñ–∞–π–ª–µ üëá')
             # –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –û—Ç–º–µ–Ω–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å–ª–µ–¥.–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –æ—Ç–≤–µ—Ç–∞
            markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1=types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
            markup.add(item1)
            doc = open('data_flights.xlsx', 'rb')
            msg = bot.send_document(message.chat.id, doc,caption='–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö',reply_markup=markup)
            doc.close()
            bot.register_next_step_handler(msg, del_row)
        except:         
            bot.send_message(message.chat.id, text='–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ .xlsx')
    except:
        bot.send_message(message.chat.id, text='''–î–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.
        –ñ–º–∏, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å:
        /add - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–µ—Ç–µ''')

def del_row(message):
    global flight_read
    if message.text != '–û—Ç–º–µ–Ω–∞':
        try:
            index_row = message.text
            if not index_row.isdigit():
                msg = bot.reply_to(
                    message, '–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ü–∏—Ñ—Ä—É. –í–≤–µ–¥–∏ –∏–Ω–¥–µ–∫—Å –∑–∞–ø–∏—Å–∏:')
                bot.register_next_step_handler(msg, del_row)
                return
            try:    
                # —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Ñ—Ä–µ–π–º–∞
                print('index del', index_row)
                #—É–¥–∞–ª—è–µ—Ç –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É —Ç–∏–ø—É, –ø–æ—ç—Ç–æ–º—É –ø–æ–∫–∞ —Å–¥–µ–ª–∞–ª–∞ –¥–ª—è 1 —ç–ª–µ–º–µ–Ω—Ç–∞ 
                flight_read.drop(labels = [int(index_row)],axis = 0, inplace = True)
                print('del row\n', flight_read)
                # –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª csv
                flight_read.to_csv('flight.csv',index=False, header=False)
                msg = bot.reply_to(
                    message, f'–ü—Ä–∏–Ω—è–ª! –ó–∞–ø–∏—Å—å –ø–æ–¥ {index_row} –∏–Ω–¥–µ–∫—Å–æ–º —É–¥–∞–ª–µ–Ω–∞.\n–°–º–æ—Ç—Ä–∏ —Ñ–∞–π–ª:')
                #–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —ç–∫—Å–µ–ª—å
                    # –æ–±–Ω–æ–≤–ª—è–µ–º DataFrame
                try:
                    flight_load() 
                    print('–∑–∞–≥—Ä—É–∑–∏–ª–∏ —Ñ—Ä–µ–π–º –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è')
                    try:
                        new_df = flight_read.apply(lambda x: round(x / np.timedelta64(1,  "h"),2) if x.name == 'fl_hours' else x)       
                        new_df.to_excel('data_flights.xlsx')  
                        doc = open('data_flights.xlsx', 'rb')
                        msg = bot.send_document(message.chat.id, doc, caption='–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö')
                        doc.close()
                    except:         
                        bot.send_message(message.chat.id, text='–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ .xlsx')
                        # –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Å—Ä–∞–∑—É
                except:
                    bot.send_message(message.chat.id, text='–î–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.')

            except:
                bot.reply_to(message, f'–ó–∞–ø–∏—Å—å –ø–æ–¥ {index_row} –∏–Ω–¥–µ–∫—Å–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')   
        except Exception as e:
            bot.reply_to(message, 'oooops')
    else:
        message_reply(message)        


@bot.message_handler(commands=['select'])
def selections_message(message):
    markup = types.ReplyKeyboardMarkup(
        one_time_keyboard=True, resize_keyboard=True)
    markup.add('–î–µ—Å–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', '–°–û–ñ','–ü–µ—Ä–µ–≤–æ–∑–∫–∞','–ù–æ—á–Ω—ã–µ','–î–Ω–µ–≤–Ω—ã–µ','–û—Ç–º–µ–Ω–∞')
    bot.reply_to(
            message, 'üëá —Ç–≤–æ–π –≤—ã–±–æ—Ä', reply_markup=markup)

@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text=="–û—Ç–º–µ–Ω–∞":
        markup = telebot.types.ReplyKeyboardRemove()    
        bot.reply_to(message, f'''–•–æ—Ä–æ—à–æ.
        –í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:{command}
        ''',reply_markup=markup)

    elif message.text in ['–î–µ—Å–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', '–°–û–ñ','–ü–µ—Ä–µ–≤–æ–∑–∫–∞','–ù–æ—á–Ω—ã–µ','–î–Ω–µ–≤–Ω—ã–µ','–û—Ç–º–µ–Ω–∞']:
    # –æ–±–Ω–æ–≤–ª—è–µ–º DataFrame
        try:
            flight_load()  
        except:
            bot.send_message(message.chat.id, text='''–î–∞–Ω–Ω—ã–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.
            –ñ–º–∏, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å:
            /add - –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–µ—Ç–µ''')

        if message.text in ["–î–µ—Å–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ","–°–û–ñ","–ü–µ—Ä–µ–≤–æ–∑–∫–∞"]:
            fn = flight_read["type_flight"].map(lambda x: x == message.text)
        elif message.text == '–ù–æ—á–Ω—ã–µ':    
            fn = flight_read["t_of_d"].map(lambda x: x == "–ù")
        elif message.text == '–î–Ω–µ–≤–Ω—ã–µ':
            fn = flight_read["t_of_d"].map(lambda x: x == "–î")

        df = flight_read[fn]
        print(flight_read[fn])
        # –ø—Ä–æ–±—É—é –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞–ª–µ—Ç–∞ —á–∞—Å–æ–≤ –≤–æ —Ñ–ª–æ–∞—Ç –ø–æ —Å—Ç–æ–ª–±—Ü—É
        new_df = df.apply(lambda x: round(x / np.timedelta64(1,  "h"),2) if x.name == 'fl_hours' else x)       
         # bot.send_message(message.chat.id, text=flight_read[fn].to_markdown(tablefmt="grid"))
        new_df.to_excel('data_flights.xlsx')  
        doc = open('data_flights.xlsx', 'rb')
        bot.send_message(message.chat.id, text=f'–î–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É {message.text} –≤ —Ñ–∞–π–ª–µ üëá')
        bot.send_document(message.chat.id, doc,caption='–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–±–æ—Ä–∞')
        doc.close()

        tdi = df.fl_hours.sum() #—Å—É–º–º–∞ –Ω–∞–ª–µ—Ç–∞ —á–∞—Å–æ–≤ - —Å—á–∏—Ç–∞–µ—Ç –¥–µ–ª—å—Ç—ã –ø–æ —Å—Ç—Ä–æ–∫–∞–º –∏–∑ –≤—ã–±–æ—Ä–∫–∏
        print(tdi) 
        tdi = tdi /  np.timedelta64(1,  "h") #–ø—ã—Ç–∞—é—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —á–∞—Å—ã, –ø–æ–ª—É—á–∞—é –≤–µ—Ä–Ω–æ - —Ç–∏–ø –§–ª–æ–∞—Ç
        # —Å–æ–±–∏—Ä–∞—é —Å—Ç—Ä–æ–∫—É —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∏—Ç–æ–≥–∞–º–∏ –≤ –Ω—É–∂–Ω–æ–º –º–Ω–µ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤
        count_day = df.count_fl.sum()
        new_row = pd.Series(data={'fl_hours': tdi, 'count_fl':count_day}, name='–ò—Ç–æ–≥')
        #append row to the dataframe 
        df = df.append(new_row, ignore_index=False)

        # –ø—Ä–æ—Å—Ç–æ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        with open('select.txt', 'w', encoding="utf8") as file:
                file.write(f'–ó–∞–ø–∏—Å–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É {message.text}:\n{df.to_markdown(tablefmt="grid")}')
        doc = open('select.txt', 'rb')
        bot.send_document(message.chat.id, doc, caption='–ó–∞–ø–∏—Å–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É')
        doc.close()
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤ –≤—ã–±–æ—Ä–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        bot.send_message(message.chat.id, text=f'''–ò—Ç–æ–≥ –ø–æ –∑–∞–ø—Ä–æ—Å—É {message.text}:
        –ù–∞–ª—ë—Ç —á–∞—Å–æ–≤ = {tdi}
        –ß–∏—Å–ª–æ –≤—ã–ª–µ—Ç–æ–≤ = {count_day} ''')
    else:
        bot.send_message(message.chat.id, text='–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é. –£–∫–∞–∂–∏ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –≤ menu')



bot.polling()
